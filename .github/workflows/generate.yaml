name: Extract, generate and build OpenAPI code

env:
  CMK_VERSION: 2.2.0p13

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  extract-openapi:
    uses: 1and1/checkmk-java-client/.github/workflows/extract-openapi.yaml@main
    with:
      cmk_version: 2.2.0p13
      target_artifact: openapi

  generate-code:
    needs: extract-openapi
    uses: 1and1/checkmk-java-client/.github/workflows/generate-code.yaml@main
    with:
      cmk_version: 2.2.0p13
      source_artifact: openapi
      target_artifact: source

  build:
    runs-on: ubuntu-latest
    needs: generate-code
    strategy:
      matrix:
        java: [ 11, 17 ]
    steps:

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ matrix.java }}
        distribution: 'adopt'

    - name: Download source
      uses: actions/download-artifact@v3
      with:
        name: source

    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn -B package --file pom.xml

  deploy-snapshot:
    runs-on: ubuntu-latest
    needs:
    - generate-code
    - build
    steps:

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'adopt'

    - name: Download source
      uses: actions/download-artifact@v3
      with:
        name: source

    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Deploy with Maven to SONATYPE OSS Snapshot if secrets are set
      env:
        SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      run: |
        if [ "${SONATYPE_USER}" != "" -a "${SONATYPE_PASSWORD}" != "" ]; then
          mvn -B deploy -P sonatype-oss-snapshot -s .github/settings.xml
        else
          echo "Not deploying, secrets SONATYPE_USER and SONATYPE_PASSWORD not provided"
        fi
